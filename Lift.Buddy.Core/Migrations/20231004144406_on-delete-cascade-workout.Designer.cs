// <auto-generated />
using System;
using Lift.Buddy.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lift.Buddy.Core.Migrations
{
    [DbContext(typeof(LiftBuddyContext))]
    [Migration("20231004144406_on-delete-cascade-workout")]
    partial class ondeletecascadeworkout
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.Exercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Repetitions")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Rest")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Series")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WorkoutDayId")
                        .HasColumnType("TEXT");

                    b.HasKey("ExerciseId");

                    b.HasIndex("WorkoutDayId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.PersonalRecord", b =>
                {
                    b.Property<Guid>("PersonalRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExerciseName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExerciseType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Repetitions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Series")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UOM")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("PersonalRecordId");

                    b.HasIndex("UserId");

                    b.ToTable("PersonalRecords");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.SecurityQuestion", b =>
                {
                    b.Property<Guid>("SecurityQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("SecurityQuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("SecurityQuestions");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsTrainer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.WorkoutDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("WorkoutPlanId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("WorkoutDays");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.WorkoutPlan", b =>
                {
                    b.Property<Guid>("WorkoutPlanId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float>("ReviewAverage")
                        .HasColumnType("REAL");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkoutPlanId");

                    b.HasIndex("CreatorId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("UserWorkoutPlan", b =>
                {
                    b.Property<Guid>("AssignedPlansWorkoutPlanId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsersUserId")
                        .HasColumnType("TEXT");

                    b.HasKey("AssignedPlansWorkoutPlanId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("UserWorkoutPlan");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.Exercise", b =>
                {
                    b.HasOne("Lift.Buddy.Core.Database.Entities.WorkoutDay", "WorkoutDay")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutDayId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("WorkoutDay");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.PersonalRecord", b =>
                {
                    b.HasOne("Lift.Buddy.Core.Database.Entities.User", "User")
                        .WithMany("PersonalRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.SecurityQuestion", b =>
                {
                    b.HasOne("Lift.Buddy.Core.Database.Entities.User", "User")
                        .WithMany("SecurityQuestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.WorkoutDay", b =>
                {
                    b.HasOne("Lift.Buddy.Core.Database.Entities.WorkoutPlan", "WorkoutPlan")
                        .WithMany("WorkoutDays")
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.WorkoutPlan", b =>
                {
                    b.HasOne("Lift.Buddy.Core.Database.Entities.User", "Creator")
                        .WithMany("CreatedPlans")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("UserWorkoutPlan", b =>
                {
                    b.HasOne("Lift.Buddy.Core.Database.Entities.WorkoutPlan", null)
                        .WithMany()
                        .HasForeignKey("AssignedPlansWorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lift.Buddy.Core.Database.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.User", b =>
                {
                    b.Navigation("CreatedPlans");

                    b.Navigation("PersonalRecords");

                    b.Navigation("SecurityQuestions");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.WorkoutDay", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("Lift.Buddy.Core.Database.Entities.WorkoutPlan", b =>
                {
                    b.Navigation("WorkoutDays");
                });
#pragma warning restore 612, 618
        }
    }
}
